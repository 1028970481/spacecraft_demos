//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8922
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CONF
{
    using Excel;
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Diagnostics;
    using System.IO;


    [System.SerializableAttribute()]
    public sealed class conf_bullet:conf_base
    {
        
        private uint nID;
        
        private string name;
        
        private float cooldownTime;
        
        private float attackDistance;
        
        private float speed;
        
        private float damage;
        
        private float explodeTime;

        private string barNode;

        private string perfab;

        private string explode;


        // 武器ID
        public uint NID
        {
            get
            {
                return this.nID;
            }
        }
        
        // 名字
        public string Name
        {
            get
            {
                return this.name;
            }
        }
        
        // 冷却时间
        public float CooldownTime
        {
            get
            {
                return this.cooldownTime;
            }
        }
        
        // 攻击距离
        public float AttackDistance
        {
            get
            {
                return this.attackDistance;
            }
        }
        
        // 速度
        public float Speed
        {
            get
            {
                return this.speed;
            }
        }
        
        // 伤害
        public float Damage
        {
            get
            {
                return this.damage;
            }
        }
        
        // 爆炸时间
        public float ExplodeTime
        {
            get
            {
                return this.explodeTime;
            }
        }

        // CD冷却进度条显示节点
        public string BarNode
        {
            get
            {
                return this.barNode;
            }
        }

        // 预制体存放的目录文件
        public string Perfab
        {
            get
            {
                return this.perfab;
            }
        }

        // 爆炸特效路径
        public string Explode
        {
            get
            {
                return this.explode;
            }
        }

        //配置表第三行开始
        public override Dictionary<UInt32, object> ReadOneExcel(string filename)
        {
            Unity.Logout.Log("conf_bullet::ReadOneExcel," + filename);

            FileStream stream = File.Open(filename, FileMode.Open, FileAccess.Read);
            //IExcelDataReader excelReader = ExcelReaderFactory.CreateOpenXmlReader(stream);
            IExcelDataReader excelReader = ExcelReaderFactory.CreateBinaryReader(stream);
            System.Data.DataSet result = excelReader.AsDataSet();

            DataRowCollection rows = result.Tables[0].Rows;
            int columns = result.Tables[0].Columns.Count;

            Dictionary<UInt32, object> conf_table = new Dictionary<uint, object>();
           
            //excelReader.GetInt32(0);

            for (int i = 3; i < rows.Count; i++) 
            {
                int index = 0;
                conf_bullet weapon = new conf_bullet();
                weapon.init = true;

                weapon.nID = (UInt32)Convert.ChangeType(rows[i][index++].ToString(),typeof(UInt32));
                weapon.name = (string)Convert.ChangeType(rows[i][index++].ToString(), typeof(string));
                weapon.cooldownTime = (float)Convert.ChangeType(rows[i][index++].ToString(), typeof(float));
                weapon.attackDistance = (float)Convert.ChangeType(rows[i][index++].ToString(), typeof(float));
                weapon.speed = (float)Convert.ChangeType(rows[i][index++].ToString(), typeof(float));
                weapon.damage = (float)Convert.ChangeType(rows[i][index++].ToString(), typeof(float));
                weapon.explodeTime = (float)Convert.ChangeType(rows[i][index++].ToString(), typeof(float));
                weapon.barNode = (string)Convert.ChangeType(rows[i][index++].ToString(), typeof(string));
                weapon.perfab = (string)Convert.ChangeType(rows[i][index++].ToString(), typeof(string));
                weapon.explode = (string)Convert.ChangeType(rows[i][index++].ToString(), typeof(string));
                Debug.Assert(index == columns);

                if (!conf_table.ContainsKey(weapon.NID))
                {
                    conf_table[weapon.NID] = weapon;
                }
            }

            excelReader.Close();
            stream.Close();
            return conf_table;
        }
    }
}
