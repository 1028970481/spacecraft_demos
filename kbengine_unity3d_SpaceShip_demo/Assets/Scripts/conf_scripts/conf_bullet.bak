//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8922
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CONF
{
    using Excel;
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Diagnostics;
    using System.IO;

    [System.SerializableAttribute()]
    public sealed class conf_bullet : conf_base
    {
        
        private uint nID;

        private float cooldownTime;

        private float attackDistance;

        private float speed;

        private float damage;

        private float explodeTime;
        
        // 子弹ID
        public uint NID
        {
            get
            {
                return this.nID;
            }
            set
            {
                this.nID = value;
            }
        }
        
        // 冷却时间
        public float CooldownTime
        {
            get
            {
                return this.cooldownTime;
            }
            set
            {
                this.cooldownTime = value;
            }
        }
        
        // 攻击距离
        public float AttackDistance
        {
            get
            {
                return this.attackDistance;
            }
            set
            {
                this.attackDistance = value;
            }
        }
        
        // 速度
        public float Speed
        {
            get
            {
                return this.speed;
            }
            set
            {
                this.speed = value;
            }
        }
        
        // 伤害
        public float Damage
        {
            get
            {
                return this.damage;
            }
            set
            {
                this.damage = value;
            }
        }
        
        // 爆炸时间
        public float ExplodeTime
        {
            get
            {
                return this.explodeTime;
            }
            set
            {
                this.explodeTime = value;
            }
        }

        public override Dictionary<UInt32, object> ReadOneExcel(string filename)
        {
            FileStream stream = File.Open(filename, FileMode.Open, FileAccess.Read);
            IExcelDataReader excelReader = ExcelReaderFactory.CreateOpenXmlReader(stream);
            DataSet result = excelReader.AsDataSet();

            DataRowCollection rows = result.Tables[0].Rows;
            int columns = result.Tables[0].Columns.Count;

            Dictionary<UInt32, object> conf_table = new Dictionary<uint, object>();
            
            for (int i = 3; i < rows.Count; i++) //配置表第三行开始
            {
                int index = 0;
                conf_bullet weapon = new conf_bullet();
                weapon.init = true;

                weapon.NID = (UInt32)Convert.ToInt32(rows[i][index++].ToString());
                weapon.CooldownTime = Convert.ToSingle(rows[i][index++].ToString());
                weapon.AttackDistance = Convert.ToSingle(rows[i][index++].ToString());
                weapon.Speed = Convert.ToSingle(rows[i][index++].ToString());
                weapon.Damage = Convert.ToSingle(rows[i][index++].ToString());
                weapon.ExplodeTime = Convert.ToSingle(rows[i][index++].ToString());
                Debug.Assert(index == columns);

                if (!conf_table.ContainsKey(weapon.NID))
                {
                    conf_table[weapon.NID] = weapon;
                }
            }          
            stream.Close();
            return conf_table;
        }

    }
}
