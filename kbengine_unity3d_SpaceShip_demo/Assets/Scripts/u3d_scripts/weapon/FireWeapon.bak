using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class FireWeapon : MonoBehaviour
{

    // Use this for initialization  
    public delegate void OnWeaponBron(Weapon weapon);
    public static event OnWeaponBron WeaponBronEvent;



    public Dictionary<int, List<FireCondition>> _FireConditions = new Dictionary<int, List<FireCondition>>();
    public Dictionary<int, WeaponAttri> _Weapons = new Dictionary<int, WeaponAttri>();

    //---------------子弹-------------------//
    //    [HideInInspector] GameObject bullet_bar = null;
    [HideInInspector] GameObject weapon_parent = null;


    void LoadCSV() //读取配置表,这里直接写死了
    {
        WeaponAttri _bullet = new WeaponAttri();
        WeaponAttri _missle = new WeaponAttri();
        _bullet.nID = 10001;        //子弹ID
        _bullet.CooldownTime = 2;   //冷却时间
        _bullet.AttackDistance = 30; //攻击距离
        _bullet.Speed = 80;           //初始飞行速度
        _bullet.Damage = 5;          //攻击伤害
        _bullet.ExplodeTime = 0.01f;  //爆炸时间


        _missle.nID = 20001;         //导弹ID
        _missle.CooldownTime = 4;    //冷却时间
        _missle.AttackDistance = 60; //攻击距离
        _missle.Speed = 220;          //初始飞行速度
        _missle.Damage = 10;         //攻击伤害
        _missle.ExplodeTime = 0.01f;  //爆炸时间

        _Weapons[_bullet.nID] = _bullet;
        _Weapons[_missle.nID] = _missle;

        if (!_FireConditions.ContainsKey(_bullet.nID))
        {
            _FireConditions[_bullet.nID] = new List<FireCondition>();
        }
        _FireConditions[_bullet.nID].Add(new IsCooldown());

        if (!_FireConditions.ContainsKey(_missle.nID))
        {
            _FireConditions[_missle.nID] = new List<FireCondition>();
        }
        _FireConditions[_missle.nID].Add(new IsCooldown());
    }


    void Start()
    {

        LoadCSV();
        Ship.WeaponEvent += FireWeapon_WeaponEvent;
    }

    private void FireWeapon_WeaponEvent(int nID)
    {
        CastSpell(nID);
    }

    // Update is called once per frame
    void Update()
    {

    }

    public void CastSpell(int nID)
    {
        if (_FireConditions.Count <= 0)
        {
            return;
        }

        foreach (var condition in _FireConditions[nID])
        {
            if (!condition.CanFire(_Weapons[nID]))
            {
                return;
            }
        }

        weapon_parent = GameObject.Find("weapon_born_"+nID);
        if (weapon_parent == null)
        {
            Debug.Log("not found "+ "weapon_born_" + nID);
            Debug.Assert(false);
        }

        GameObject prefab = Resources.Load<GameObject>("character/spacecraft02/prefab/shoot_" + nID);
        GameObject clone_perfab = GameObject.Instantiate(prefab);
//        clone_perfab.transform.parent = weapon_parent.transform;
        clone_perfab.transform.position = weapon_parent.transform.position;
        clone_perfab.transform.rotation = weapon_parent.transform.rotation;

        KBEngine.Event.fireIn("useWeapon", clone_perfab.transform.position, clone_perfab.transform.eulerAngles, clone_perfab.transform.forward,nID);

        _Weapons[nID].Duration = _Weapons[nID].CooldownTime;

        Weapon weapon = clone_perfab.GetComponent<Weapon>();
        weapon._attri = _Weapons[nID];
        WeaponBronEvent(weapon);
        weapon.Cast();
    }



}
